<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">Workday and SAP Organization Aggregation</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
As a SAP admin I want to aggregate Organizations from Workday and from SAP and compare them to see which organizations can only be found in one of the two and which organizations are in both instances. 

For practical purposes this Template will generate the result in the format of a CSV Report sent by mail.

This Template should serve as a foundation for extracting data from two systems, aggregating data, comparing values of fields for the objects, and generating a report on the differences. 

As implemented, it gets organizations from Workday and from SAP, compares by the name of the organizations, generates a CSV file which shows organizations in Workday and in SAP. The report is then emailed to a configured group of email addresses.
		</section>
		<section id="considerations">
		<![CDATA[
To make this Anypoint Template run, there are certain preconditions that must be considered. All of them deal with the preparations in both, that must be made in order for all to run smoothly.
**Failing to do so could lead to unexpected behavior of the template.**
Before continue with the use of this Anypoint Template, you may want to check out this [Documentation Page](https://docs.mulesoft.com/connectors/sap-connector#configuring-the-connector-in-studio-7), that will teach you how to work 
with SAP and Anypoint Studio.
## Disclaimer
This Anypoint template uses a few private Maven dependencies from Mulesoft in order to work. If you intend to run this template with Maven support, you need to add three extra dependencies for SAP to the pom.xml.
]]>
		</section>
		<section id="wday_src">
<![CDATA[
The Workday connector currently does not support autopaging functionality out of the box so number of processed objects are limited to the connector's single page size.
]]>
		</section>
		<section id="default_sap_src">
$H$H# As source of data

SAP backend system is used as data source for aggregation.
Data is read by RFC call of BAPI function to SAP.
SAP Connector needs to be properly customized as per chapter: [Properties to be configured](#propertiestobeconfigured)
		</section>
		<section id="running_on_cloudhub">
<![CDATA[
Once your app is all set and started, supposing you choose as domain name `workdayorganizationsaggregation` to trigger the use case you just need to hit `http://workdayorganizationsaggregation.cloudhub.io/generatereport` and the report will be sent to the emails configured.

]]>
		</section>
		<section id="default_running_on_premise">
<![CDATA[
Complete all properties in one of the property files, for example in [mule.prod.properties] (../blob/master/src/main/resources/mule.prod.properties) and run your app with the corresponding environment variable to use it. To follow the example, this will be `mule.env=prod`.

After this, to trigger the use case you just need to hit the local http endpoint with the port you configured in your file. If this is, for instance, `9090` then you should hit: `http://localhost:9090/generatereport` and this will create a CSV report and send it to the mails set.
]]>
		</section>
		<section id="api_calls">
			<![CDATA[There are no special considerations regarding API calls.  ]]>
		</section>
		<section id="application_configuration">
		<![CDATA[
#### Application configuration		
+ http.port `9090`

#### Workday Connector configuration
+ wday.username `bob.dylan@orga`
+ wday.tenant `org457`
+ wday.password `DylanPassword123`
+ wday.host `servise425546.workday.com`

### SAP Connector configuration
+ sap.jco.ashost `your.sap.address.com`
+ sap.jco.user `SAP_USER`
+ sap.jco.passwd `SAP_PASS`
+ sap.jco.sysnr `14`
+ sap.jco.client `800`
+ sap.jco.lang `EN`

#### SMTP Services configuration
+ smtp.host `smtp.gmail.com`
+ smtp.port `587`
+ smtp.user `exampleuser@gmail.com`
+ smtp.password `ExamplePassword456`

#### Mail details
+ mail.from `exampleuser@gmail.com`
+ mail.to `woody.guthrie@gmail.com`
+ mail.subject `Organization Report`
+ mail.body `Please find attached your Organization Report`
+ attachment.name `OrganizationsReport.csv`
]]>
		</section>
		<section id="default_endpoints_xml">
		<![CDATA[
This is the file where you will found the endpoint to start the aggregation. This Template has an HTTP Inbound Endpoint as the way to trigger the use case.
$H$H# Trigger Flow
**HTTP Inbound Endpoint** - Start Report Generation
+ `${http.port}` is set as a property to be defined either on a property file or in CloudHub environment variables.
+ The path configured by default is `generatereport` and you are free to change for the one you prefer.
+ The host name for all endpoints in your CloudHub configuration should be defined as `localhost`. CloudHub will then route requests from your application domain URL to the endpoint.
]]>
		</section>
		<section id="default_business_logic_xml">
		<![CDATA[
Functional aspect of the Template is implemented on this XML, directed by one flow responsible of conducting the aggregation of data, comparing records and finally formating the output, in this case being a report.
Using Scatter-Gather component we are querying the data in different systems. After that the aggregation is implemented in DataWeave 2 script using Transform component.
Aggregated results are sorted by source of existence:
1. Organizations only in Workday
2. Organizations only in SAP
3. Organizations in both Workday and SAP
and transformed to CSV format. Final report in CSV format is sent to email, that you configured in mule.*.properties file.
]]>
		</section>
	</sections>
</configuration>
